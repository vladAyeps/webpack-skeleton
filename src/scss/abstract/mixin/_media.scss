@mixin minMedia($min-width){
  $value: $min-width;
  
  @if (map-has-key($grid-breakpoints, $min-width)) {
    $value: map-get($grid-breakpoints, $min-width);
  } @else {
    @if not is-relative-length($min-width) and not is-absolute-length($min-width) {
      $value: #{$min-width}px;
    }
  }

  @media screen and (min-width: #{$value}) {
    @content;
  }
}

@mixin minWidthAndHeightMedia($min-width, $min-height){
  $width-value: $min-width;
  $height-value: $min-height;

  @if (map-has-key($grid-breakpoints, $min-width)) {
    $width-value: map-get($grid-breakpoints, $min-width);
  } @else {
    @if not is-relative-length($min-width) and not is-absolute-length($min-width) {
      $width-value: #{$min-width}px;
    }
  }

  @if not is-relative-length($min-height) and not is-absolute-length($min-height) {
    $height-value: #{$min-height}px;
  }

  @media screen and (min-width: #{$width-value}) and (min-height: #{$height-value}) {
    @content;
  }
}

@mixin media($max-width){
  $value: $max-width;

  @if (map-has-key($grid-breakpoints, $max-width)) {
    $value: map-get($grid-breakpoints, $max-width);
  } @else {
    @if not is-relative-length($max-width) and not is-absolute-length($max-width) {
      $value: #{$max-width}px;
    }
  }

  @media screen and (max-width: #{$value}) {
    @content;
  }
}

@mixin minMediaOrient($min-width, $orient) {
  $value: $min-width;
  
  @if (map-has-key($grid-breakpoints, $min-width)) {
    $value: map-get($grid-breakpoints, $min-width);
  } @else {
    @if not is-relative-length($min-width) and not is-absolute-length($min-width) {
      $value: #{$min-width}px;
    }
  }

  @media screen and (min-width: #{$value}) and (orientation: $orient){
    @content;
  }
}
